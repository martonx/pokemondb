// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonDB;

#nullable disable

namespace PokemonDB.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    partial class PokemonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokemonDB.DbModels.CategoryDBModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PokemonDB.DbModels.FightDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttackerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DefenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackerId");

                    b.HasIndex("DefenderId");

                    b.ToTable("Fights");
                });

            modelBuilder.Entity("PokemonDB.DbModels.FightItemDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("DefenderHitpoint")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("FightId")
                        .HasColumnType("int");

                    b.Property<bool>("IsKilled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FightId");

                    b.ToTable("FightItems");
                });

            modelBuilder.Entity("PokemonDB.DbModels.PokemonCategoryDBModel", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PokemonCategories");
                });

            modelBuilder.Entity("PokemonDB.DbModels.PokemonDBModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("HitPoint")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("PokemonDB.DbModels.FightDbModel", b =>
                {
                    b.HasOne("PokemonDB.DbModels.PokemonDBModel", "Attacker")
                        .WithMany("AttackerFights")
                        .HasForeignKey("AttackerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokemonDB.DbModels.PokemonDBModel", "Defender")
                        .WithMany("DefenderFights")
                        .HasForeignKey("DefenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attacker");

                    b.Navigation("Defender");
                });

            modelBuilder.Entity("PokemonDB.DbModels.FightItemDbModel", b =>
                {
                    b.HasOne("PokemonDB.DbModels.FightDbModel", "Fight")
                        .WithMany("FightItems")
                        .HasForeignKey("FightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fight");
                });

            modelBuilder.Entity("PokemonDB.DbModels.PokemonCategoryDBModel", b =>
                {
                    b.HasOne("PokemonDB.DbModels.CategoryDBModel", "Category")
                        .WithMany("Pokemons")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonDB.DbModels.PokemonDBModel", "Pokemon")
                        .WithMany("Categories")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokemonDB.DbModels.CategoryDBModel", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("PokemonDB.DbModels.FightDbModel", b =>
                {
                    b.Navigation("FightItems");
                });

            modelBuilder.Entity("PokemonDB.DbModels.PokemonDBModel", b =>
                {
                    b.Navigation("AttackerFights");

                    b.Navigation("Categories");

                    b.Navigation("DefenderFights");
                });
#pragma warning restore 612, 618
        }
    }
}
